{
    "kind": "List",
    "apiVersion": "v1",
    "metadata": {},
    "items": [
        {
            "apiVersion": "v1",
            "kind": "BuildConfig",
            "metadata": {
                "labels": {
                    "app": "cicd-pipeline",
                    "group": "cicd",
                    "name": "cicd-pipeline",
                    "template": "cicd"
                },
                "name": "tasks-pipeline"
            },
            "spec": {
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "https://github.com/SnapGizmos/CICD/"
                    }
                },
                "strategy": {
                    "type": "JenkinsPipeline",
                    "jenkinsPipelineStrategy": {
                            "jenkinsfilePath": openshift/pipeline.jenkins
                    }
                }
            },
            "status": {
                "lastVersion": 0
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Route",
            "metadata": {
                "labels": {
                    "group": "cicd",
                    "template": "cicd"
                },
                "name": "jenkins"
            },
            "spec": {
                "to": {
                    "kind": "Service",
                    "name": "jenkins"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "DeploymentConfig",
            "metadata": {
                "labels": {
                    "group": "cicd",
                    "template": "cicd"
                },
                "name": "jenkins"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "name": "jenkins"
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "name": "jenkins"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "capabilities": {},
                                "env": [
                                    {
                                        "name": "JENKINS_PASSWORD",
                                        "value": "password"
                                    },
                                    {
                                        "name": "KUBERNETES_MASTER",
                                        "value": "https://kubernetes.default:443"
                                    },
                                    {
                                        "name": "KUBERNETES_TRUST_CERTIFICATES",
                                        "value": "true"
                                    },
                                    {
                                        "name": "JNLP_SERVICE_NAME",
                                        "value": "jenkins-jnlp"
                                    }
                                ],
                                "image": " ",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/login",
                                        "port": 8080
                                    },
                                    "initialDelaySeconds": 120,
                                    "timeoutSeconds": 3
                                },
                                "name": "jenkins",
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/login",
                                        "port": 8080
                                    },
                                    "initialDelaySeconds": 3,
                                    "timeoutSeconds": 3
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "1Gi"
                                    }
                                },
                                "securityContext": {
                                    "capabilities": {},
                                    "privileged": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/jenkins",
                                        "name": "jenkins-data"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "volumes": [
                            {
                                "emptyDir": {
                                    "medium": ""
                                },
                                "name": "jenkins-data"
                            }
                        ]
                    }
                },
                "triggers": [
                    {
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "jenkins"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "jenkins:latest",
                                "namespace": "openshift"
                            },
                            "lastTriggeredImage": ""
                        },
                        "type": "ImageChange"
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        },
        {
            "apiVersion": "v1",
            "groupNames": null,
            "kind": "RoleBinding",
            "metadata": {
                "labels": {
                    "group": "cicd",
                    "template": "cicd"
                },
                "name": "default_edit"
            },
            "roleRef": {
                "name": "edit"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "default"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "labels": {
                    "app": "jenkins",
                    "group": "cicd",
                    "template": "cicd"
                },
                "name": "jenkins-jnlp"
            },
            "spec": {
                "ports": [
                    {
                        "name": "agent",
                        "nodePort": 0,
                        "port": 50000,
                        "protocol": "TCP",
                        "targetPort": 50000
                    }
                ],
                "selector": {
                    "name": "jenkins"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "service.alpha.openshift.io/dependencies": "[{\"name\": \"jenkins-jnlp\", \"namespace\": \"\", \"kind\": \"Service\"}]",
                    "service.openshift.io/infrastructure": "true"
                },
                "creationTimestamp": null,
                "labels": {
                    "app": "jenkins",
                    "group": "cicd",
                    "template": "cicd"
                },
                "name": "jenkins"
            },
            "spec": {
                "portalIP": "",
                "ports": [
                    {
                        "name": "web",
                        "nodePort": 0,
                        "port": 80,
                        "protocol": "TCP",
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "name": "jenkins"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "Sonatype Nexus repository manager's http port"
                },
                "labels": {
                    "app": "nexus",
                    "group": "cicd",
                    "template": "cicd"
                },
                "name": "nexus"
            },
            "spec": {
                "ports": [
                    {
                        "name": "web",
                        "port": 8081,
                        "protocol": "TCP",
                        "targetPort": 8081
                    }
                ],
                "selector": {
                    "app": "nexus",
                    "deploymentconfig": "nexus"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Route",
            "metadata": {
                "labels": {
                    "app": "nexus",
                    "group": "cicd",
                    "template": "cicd"
                },
                "name": "nexus"
            },
            "spec": {
                "port": {
                    "targetPort": "web"
                },
                "to": {
                    "kind": "Service",
                    "name": "nexus"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "ImageStream",
            "metadata": {
                "labels": {
                    "app": "nexus",
                    "group": "cicd",
                    "template": "cicd"
                },
                "name": "nexus"
            },
            "spec": {
                "tags": [
                    {
                        "annotations": {
                            "description": "The Nexus Docker image",
                            "tags": "nexus"
                        },
                        "from": {
                            "kind": "DockerImage",
                            "name": "openshiftdemos/nexus:2.13.0-01"
                        },
                        "importPolicy": {},
                        "name": "2.13.0-01"
                    }
                ]
            }
        },
        {
            "apiVersion": "v1",
            "kind": "DeploymentConfig",
            "metadata": {
                "labels": {
                    "app": "nexus",
                    "group": "cicd",
                    "template": "cicd"
                },
                "name": "nexus"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "app": "nexus",
                    "deploymentconfig": "nexus"
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "app": "nexus",
                            "deploymentconfig": "nexus"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "image": " ",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 5,
                                    "httpGet": {
                                        "path": "/content/groups/public",
                                        "port": 8081
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "nexus",
                                "ports": [
                                    {
                                        "containerPort": 8081,
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 5,
                                    "httpGet": {
                                        "path": "/content/groups/public",
                                        "port": 8081
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "1Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/opt/nexus-work",
                                        "name": "nexus-data"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "nexus-data"
                            }
                        ]
                    }
                },
                "triggers": [
                    {
                        "type": "ConfigChange"
                    },
                    {
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "nexus"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "nexus:2.13.0-01"
                            }
                        },
                        "type": "ImageChange"
                    }
                ]
            },
            "status": {}
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The Gogs server's http port",
                    "service.alpha.openshift.io/dependencies": "[{\"name\": \"postgresql-gogs\", \"namespace\": \"\", \"kind\": \"Service\"}]",
                    "service.openshift.io/infrastructure": "true"
                },
                "labels": {
                    "app": "gogs",
                    "group": "cicd",
                    "template": "cicd"
                },
                "name": "gogs"
            },
            "spec": {
                "ports": [
                    {
                        "name": "web",
                        "port": 3000,
                        "protocol": "TCP",
                        "targetPort": 3000
                    }
                ],
                "selector": {
                    "app": "gogs",
                    "deploymentconfig": "gogs"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "creationTimestamp": null,
                "labels": {
                    "app": "gogs",
                    "group": "cicd",
                    "template": "cicd"
                },
                "name": "postgresql-gogs"
            },
            "spec": {
                "ports": [
                    {
                        "name": "postgresql",
                        "port": 5432,
                        "protocol": "TCP",
                        "targetPort": 5432
                    }
                ],
                "selector": {
                    "app": "gogs",
                    "deploymentconfig": "postgresql-gogs"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Route",
            "metadata": {
                "annotations": {
                    "description": "Route for gogs's http service."
                },
                "labels": {
                    "app": "gogs",
                    "group": "cicd",
                    "template": "cicd"
                },
                "name": "gogs"
            },
            "spec": {
                "to": {
                    "kind": "Service",
                    "name": "gogs"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "ImageStream",
            "metadata": {
                "labels": {
                    "app": "gogs",
                    "group": "cicd",
                    "template": "cicd"
                },
                "name": "gogs"
            },
            "spec": {
                "tags": [
                    {
                        "annotations": {
                            "description": "The Gogs git server docker image",
                            "tags": "gogs,go,golang",
                            "version": "latest"
                        },
                        "from": {
                            "kind": "DockerImage",
                            "name": "openshiftdemos/gogs:latest"
                        },
                        "importPolicy": {},
                        "name": "latest"
                    }
                ]
            }
        },
        {
            "apiVersion": "v1",
            "kind": "DeploymentConfig",
            "metadata": {
                "labels": {
                    "app": "gogs",
                    "group": "cicd",
                    "template": "cicd"
                },
                "name": "gogs"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "app": "gogs",
                    "deploymentconfig": "gogs"
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "app": "gogs",
                            "deploymentconfig": "gogs"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "image": " ",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 3000
                                    },
                                    "initialDelaySeconds": 15,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "gogs",
                                "ports": [
                                    {
                                        "containerPort": 3000,
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 3000
                                    },
                                    "initialDelaySeconds": 15,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "512Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30
                    }
                },
                "triggers": [
                    {
                        "type": "ConfigChange"
                    },
                    {
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "gogs"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "gogs:latest"
                            }
                        },
                        "type": "ImageChange"
                    }
                ]
            },
            "status": {}
        },
        {
            "apiVersion": "v1",
            "kind": "DeploymentConfig",
            "metadata": {
                "creationTimestamp": null,
                "labels": {
                    "app": "gogs",
                    "deploymentconfig": "postgresql-gogs",
                    "group": "cicd",
                    "template": "cicd"
                },
                "name": "postgresql-gogs"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "app": "gogs",
                    "deploymentconfig": "postgresql-gogs"
                },
                "strategy": {
                    "recreateParams": {
                        "timeoutSeconds": 600
                    },
                    "resources": {},
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "app": "gogs",
                            "deploymentconfig": "postgresql-gogs"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "POSTGRESQL_USER",
                                        "value": "userYT2"
                                    },
                                    {
                                        "name": "POSTGRESQL_PASSWORD",
                                        "value": "Mqh1fglHnRXFYgie"
                                    },
                                    {
                                        "name": "POSTGRESQL_DATABASE",
                                        "value": "gogs"
                                    }
                                ],
                                "image": " ",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "tcpSocket": {
                                        "port": 5432
                                    },
                                    "timeoutSeconds": 1
                                },
                                "name": "postgresql",
                                "ports": [
                                    {
                                        "containerPort": 5432,
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/sh",
                                            "-i",
                                            "-c",
                                            "psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"
                                        ]
                                    },
                                    "failureThreshold": 3,
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "256Mi"
                                    }
                                },
                                "securityContext": {
                                    "capabilities": {},
                                    "privileged": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/pgsql/data",
                                        "name": "postgresql-data"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "emptyDir": {},
                                "name": "postgresql-data"
                            }
                        ]
                    }
                },
                "triggers": [
                    {
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "postgresql"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "postgresql:9.5",
                                "namespace": "openshift"
                            }
                        },
                        "type": "ImageChange"
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            },
            "status": {}
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "labels": {
                    "app": "gogs",
                    "group": "cicd",
                    "job": "install-gogs",
                    "template": "cicd"
                },
                "name": "install-gogs"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/bin/bash",
                            "/tmp/installgogs.sh"
                        ],
                        "env": [
                            {
                                "name": "GOGS_PASSWORD",
                                "value": "password"
                            }
                        ],
                        "image": "docker.io/openshiftdemos/oc",
                        "name": "oc",
                        "resources": {
                            "limits": {
                                "memory": "128Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp/",
                                "name": "script-volume"
                            }
                        ]
                    }
                ],
                "restartPolicy": "Never",
                "volumes": [
                    {
                        "configMap": {
                            "items": [
                                {
                                    "key": "installgogs.sh",
                                    "path": "installgogs.sh"
                                }
                            ],
                            "name": "gogs-install"
                        },
                        "name": "script-volume"
                    }
                ]
            }
        },
        {
            "apiVersion": "v1",
            "data": {
                "installgogs.sh": "#!/bin/bash\n\nset -x\n\n# Use the oc client to get the url for the gogs and jenkins route and service\nGOGSSVC=$(oc get svc gogs -o template --template='{{.spec.clusterIP}}')\nGOGSROUTE=$(oc get route gogs -o template --template='{{.spec.host}}')\nJENKINSSVC=$(oc get svc jenkins -o template --template='{{.spec.clusterIP}}')\n\n# Use the oc client to get the postgres and jenkins variables into the current shell\neval $(oc env dc/postgresql-gogs --list | grep -v \\#)\neval $(oc env dc/jenkins --list | grep -v \\#)\n\n# postgres has a readiness probe, so checking if there is at least one\n# endpoint means postgres is alive and ready, so we can then attempt to install gogs\n# we're willing to wait 60 seconds for it, otherwise something is wrong.\nx=1\noc get ep postgresql-gogs -o yaml | grep \"\\- addresses:\"\nwhile [ ! $? -eq 0 ]\ndo\n  sleep 10\n  x=$(( $x + 1 ))\n\n  if [ $x -gt 100 ]\n  then\n    exit 255\n  fi\n\n  oc get ep postgresql-gogs -o yaml | grep \"\\- addresses:\"\ndone\n\n# now we wait for gogs to be ready in the same way\nx=1\noc get ep gogs -o yaml | grep \"\\- addresses:\"\nwhile [ ! $? -eq 0 ]\ndo\n  sleep 10\n  x=$(( $x + 1 ))\n\n  if [ $x -gt 100 ]\n  then\n    exit 255\n  fi\n\n  oc get ep gogs -o yaml | grep \"\\- addresses:\"\ndone\n\n# we might catch the router before it's been updated, so wait just a touch\n# more\nsleep 10\n\n# RETURN=$(curl -o /dev/null -sL -w \"%{http_code}\" http://$GOGSSVC:3000/install \\\n# RETURN=$(curl -o /dev/null -sL -v http://$GOGSSVC:3000/install \\\nRETURN=$(curl -o /dev/null -sL --post302 -w \"%{http_code}\" http://$GOGSSVC:3000/install \\\n--form db_type=PostgreSQL \\\n--form db_host=postgresql-gogs:5432 \\\n--form db_user=$POSTGRESQL_USER \\\n--form db_passwd=$POSTGRESQL_PASSWORD \\\n--form db_name=gogs \\\n--form ssl_mode=disable \\\n--form db_path=data/gogs.db \\\n--form \"app_name=Gogs: Go Git Service\" \\\n--form repo_root_path=/home/gogs/gogs-repositories \\\n--form run_user=gogs \\\n--form domain=localhost \\\n--form ssh_port=22 \\\n--form http_port=3000 \\\n--form app_url=http://${GOGSROUTE}/ \\\n--form log_root_path=/opt/gogs/log \\\n--form admin_name=gogs \\\n--form admin_passwd=$GOGS_PASSWORD \\\n--form admin_confirm_passwd=$GOGS_PASSWORD \\\n--form admin_email=admin@gogs.com)\n\nif [ $RETURN != \"200\" ]\nthen\n  exit 255\nfi\n\nsleep 10\n\n# import github repository\ncat \u003c\u003cEOF \u003e /tmp/data.json\n{\n  \"clone_addr\": \"https://github.com/Titerote/config-server-poc.git\",\n  \"uid\": 1,\n  \"repo_name\": \"config-server-poc\"\n}\nEOF\n\nRETURN=$(curl -o /dev/null -sL -w \"%{http_code}\" -H \"Content-Type: application/json\" \\\n-u gogs:$GOGS_PASSWORD -X POST http://$GOGSSVC:3000/api/v1/repos/migrate -d @/tmp/data.json)\n\nif [ $RETURN != \"201\" ]\nthen\n  exit 255\nfi\n\nsleep 5\n\n# add webhook to Gogs to trigger pipeline on push\ncat \u003c\u003cEOF \u003e /tmp/data.json\n{\n  \"type\": \"gogs\",\n  \"config\": {\n    \"url\": \"http://admin:$JENKINS_PASSWORD@$JENKINSSVC/job/tasks-cd-pipeline/build?delay=0sec\",\n    \"content_type\": \"json\"\n  },\n  \"events\": [\n    \"push\"\n  ],\n  \"active\": true\n}\nEOF\nRETURN=$(curl -o /dev/null -sL -w \"%{http_code}\" -H \"Content-Type: application/json\" \\\n-u gogs:$GOGS_PASSWORD -X POST http://$GOGSSVC:3000/api/v1/repos/gogs/openshift-tasks/hooks -d @/tmp/data.json)\n\nif [ $RETURN != \"201\" ]\nthen\n  exit 255\nfi\n"
            },
            "kind": "ConfigMap",
            "metadata": {
                "labels": {
                    "group": "cicd",
                    "template": "cicd"
                },
                "name": "gogs-install"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "service.openshift.io/infrastructure": "true"
                },
                "labels": {
                    "app": "sonarqube",
                    "group": "cicd",
                    "template": "cicd"
                },
                "name": "sonarqube"
            },
            "spec": {
                "ports": [
                    {
                        "name": "sonarqube",
                        "port": 9000,
                        "protocol": "TCP",
                        "targetPort": 9000
                    }
                ],
                "selector": {
                    "app": "sonarqube",
                    "deploymentconfig": "sonarqube"
                },
                "sessionAffinity": "None",
                "type": "ClusterIP"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Route",
            "metadata": {
                "annotations": {
                    "description": "Route for SonarQube's http service."
                },
                "labels": {
                    "app": "sonarqube",
                    "group": "cicd",
                    "template": "cicd"
                },
                "name": "sonarqube"
            },
            "spec": {
                "to": {
                    "kind": "Service",
                    "name": "sonarqube"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "ImageStream",
            "metadata": {
                "labels": {
                    "app": "sonarqube",
                    "group": "cicd",
                    "template": "cicd"
                },
                "name": "sonarqube"
            },
            "spec": {
                "tags": [
                    {
                        "annotations": {
                            "description": "The SonarQube Docker image",
                            "tags": "sonarqube",
                            "version": "6.0"
                        },
                        "from": {
                            "kind": "DockerImage",
                            "name": "library/sonarqube:latest"
                        },
                        "importPolicy": {},
                        "name": "6.0"
                    }
                ]
            }
        },
        {
            "apiVersion": "v1",
            "kind": "DeploymentConfig",
            "metadata": {
                "labels": {
                    "app": "sonarqube",
                    "deploymentconfig": "sonarqube",
                    "group": "cicd",
                    "template": "cicd"
                },
                "name": "sonarqube"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "app": "sonarqube",
                    "deploymentconfig": "sonarqube"
                },
                "strategy": {
                    "resources": {},
                    "rollingParams": {
                        "intervalSeconds": 1,
                        "maxSurge": "25%",
                        "maxUnavailable": "25%",
                        "timeoutSeconds": 600,
                        "updatePeriodSeconds": 1
                    },
                    "type": "Rolling"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "openshift.io/container.sonarqube.image.entrypoint": "[\"./bin/run.sh\"]"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "sonarqube",
                            "deploymentconfig": "sonarqube"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "image": " ",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 9000
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 20,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "sonarqube",
                                "ports": [
                                    {
                                        "containerPort": 9000,
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 9000
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 20,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "1536Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "securityContext": {},
                        "terminationGracePeriodSeconds": 30
                    }
                },
                "test": false,
                "triggers": [
                    {
                        "type": "ConfigChange"
                    },
                    {
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "sonarqube"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "sonarqube:6.0"
                            }
                        },
                        "type": "ImageChange"
                    }
                ]
            },
            "status": {}
        }
    ]
}
