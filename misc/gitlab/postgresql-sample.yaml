  apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      template: postgresql-persistent-template
    name: postgresql
  spec:
    replicas: 1
    selector:
      name: postgresql
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            value: ${DATABASE_USER}
          - name: POSTGRESQL_PASSWORD
            value: ${DATABASE_PWD}
          - name: POSTGRESQL_DATABASE
            value: ${DATABASE_NAME}
          image: postgres:latest
          imagePullPolicy: IfNotPresent
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStream
          name: postgres:latest
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status: {}
